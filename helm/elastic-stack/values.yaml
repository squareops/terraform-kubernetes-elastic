version: ${elastic_stack_version}
namespace: ${namespace}

kibana:
  count: ${kibana_node_count}
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
    host: ${hostname}
    tls:
      enabled: true
  resources:
    requests:
      memory: 600Mi
      cpu: 200m
    limits:
      memory: 2.5Gi
      cpu: 1000m

master:
  count: ${es_master_node_count}
  volume_size: ${es_master_node_size}
  storageClassName: ${es_master_node_sc}
  resources:
    requests:
      memory: 2Gi
      cpu: 300m
    limits:
      memory: 4Gi
      cpu: 700m

worker:
  data_hot:
    count: ${es_data_hot_node_count}
    volume_size: ${es_data_hot_node_size}
    storageClassName: ${es_data_hot_node_sc}
    resources:
      requests:
        memory: 2Gi
        cpu: 200m
      limits:
        memory: 4Gi
        cpu: 500m

  data_warm:
    count: ${es_data_warm_node_count}
    volume_size: ${es_data_warm_node_size}
    storageClassName: ${es_data_warm_node_sc}
    resources:
      requests:
        memory: 2Gi
        cpu: 200m
      limits:
        memory: 4Gi
        cpu: 500m

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: "ECK-Services"
          operator: In
          values:
          - "true"

filebeat:
  enabled: true
  resources:
    requests:
      memory: 100Mi
      cpu: 50m
    limits:
      memory: 200Mi
      cpu: 200m

s3:
  role_arn: "${s3_role_arn}"

ES_JAVA_OPTS: "-Xms2048m -Xmx2048m"
